DYNAMIC EXECUTION
------------------------
Lots of places of the form EXECUTE "SELECT X FROM Y WHERE key=" || <something>
This something is usually a function of a parameter. Whole thing effectively can be compiled to an inlinable
SQL query.

CREATE FUNCTION fnc_pessoa3(pcpf character varying, pcampo character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$
 declare 
   result varchar;
   sql    text;
 begin
   sql := 'select '|| pcampo || ' from pessoas where cpf = $1';
   execute sql into result using pcpf;
   return result; 
   
 end;

https://github.com/aasouzaconsult/Scripts-para-DBA/blob/439200ecb7ba64187a8895f99ad10c20faa7d8eb/99.%20Postgres/Curso%20-%20MONDRIAN/aula.sql

https://github.com/Mergoth/eo-old-dnevnik/blob/00c789ea1dd4f6ab80f9a174745f2b04d03647a7/dou-parent/dou-web-server/db/current/functions.sql has dynamic execution with 198 parameters - any inlined query would probably be very large for even simple queries of this kind (note: this is not a PG dump, so someone manually wrote this code).

------------------------
STATIC EXECUTION
------------------------
Plenty of instances where we SELECT from a table on another function. (SELECT <other udf>(x) FROM table)

------------------------
RAISES
------------------------
Usually tied to exceptions handling clauses.

Almost always of the form RAISE NOTICE "message: %", parameter

------------------------
EXCEPTIONS
------------------------
Exceptions such as duplicate_sql will be interesting to codegen as these just map to Insert calls returning false in tpl. These nice exception cases seem to happen mainly when we wrap around a sql execution.

------------------------
PERFORM
------------------------
instances where we perform pg_notify
used to invoke void functions. These void functions often just contain some insert or update statement.

-----------------------
Other notes
------------------------
ALTER table's are not inlinable by Froid right now and will be interesting to look into for compilation.
Lots of pg_dump

1/3 of the UDF's return Triggers

1391/19408 of these are NOT read-only as determined by searching for 'insert' 'update' or perform commands



--------------------------------------------
Overall Statistics of non-inlinable features
--------------------------------------------
Feature            | Count
----------------------------
diagnostics        |  267
perform/inserts    |  1391
raise		   |  1661
exception	   |  571
immutable	   |  659
stable		   |  134
volatile	   |  711
dynamic execution  |  774

-----------------------------------------------------
Statistics amongst the 6262 trigger functions we have
-----------------------------------------------------
Feature            | Count
----------------------------
diagnostics        |  1
perform/inserts    |  264
raise		   |  782
exception	   |  19
immutable	   |  659
stable		   |  10
volatile	   |  256
dynamic execution  |  157


Total number of functions with the above features

-------------------------------------------------
ALL features except stable, volatile or immutable
-------------------------------------------------
3808 without triggers 
8953 with triggers


-------------------------------------------------
ALL features except volatile or immutable
-------------------------------------------------
4485 without triggers 
9389 with triggers

   
-------------------------------------------------
ALL features except immutable
-------------------------------------------------
4612 without triggers 
9510 with triggers

-------------------------------------------------
ALL features
-------------------------------------------------
5256 without triggers 
10153 with triggers
